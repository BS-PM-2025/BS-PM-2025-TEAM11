# Generated by Django 5.2 on 2025-05-22 08:30

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='שם הקורס')),
                ('semester', models.CharField(choices=[('A', 'סמסטר א'), ('B', 'סמסטר ב')], max_length=1, null=True, verbose_name='סמסטר לימוד הקורס')),
                ('year_of_study', models.IntegerField(choices=[(1, 'שנה א'), (2, 'שנה ב'), (3, 'שנה ג'), (4, 'שנה ד')], null=True, verbose_name='שנת לימוד הקורס')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('secretary', 'Secretary'), ('academic', 'Academic Staff')], max_length=20)),
                ('id_number', models.CharField(max_length=9, unique=True)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=9)),
                ('semester', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicstaff')),
            ],
        ),
        migrations.CreateModel(
            name='Secretary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_study', models.PositiveIntegerField(verbose_name='year of study')),
                ('degree_type', models.CharField(choices=[('bachelor', 'תואר ראשון'), ('master', 'תואר שני')], max_length=10, verbose_name='degree type')),
                ('year1_sem1', models.CharField(blank=True, max_length=9, null=True)),
                ('year1_sem2', models.CharField(blank=True, max_length=9, null=True)),
                ('year2_sem1', models.CharField(blank=True, max_length=9, null=True)),
                ('year2_sem2', models.CharField(blank=True, max_length=9, null=True)),
                ('year3_sem1', models.CharField(blank=True, max_length=9, null=True)),
                ('year3_sem2', models.CharField(blank=True, max_length=9, null=True)),
                ('year4_sem1', models.CharField(blank=True, max_length=9, null=True)),
                ('year4_sem2', models.CharField(blank=True, max_length=9, null=True)),
                ('current_year_of_study', models.PositiveIntegerField(blank=True, null=True)),
                ('current_semester', models.CharField(blank=True, choices=[('A', 'Semester A'), ('B', 'Semester B')], max_length=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('request_type', models.CharField(choices=[('other', 'אחר'), ('cancel_hw_percent', 'ביטול % אחוז עבודות בית בציון הסופי'), ('special_exam', 'בקשה למועד מיוחד'), ('iron_swords', 'בקשה למטלה חלופית - חרבות ברזל'), ('prerequisite_exemption', 'בקשה לפטור מדרישות קדם'), ('course_exemption', 'בקשה לפטור מקורס'), ('delay_submission', 'דחיית הגשת עבודה'), ('increase_credits', 'הגדלת נ"ז מעבר למותר'), ('military_docs', 'הגשת אישורי מילואים'), ('course_unblock', 'שחרור חסימת קורס'), ('registration_exemption', 'שחרור מחובת הרשמה'), ('include_hw_grade', 'שקלול עבודות בית בציון הסופי')], default='other', max_length=50)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('explanation', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(limit_choices_to={'role__in': ['academic', 'secretary']}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(blank=True, help_text='פורמט: 2022-2023', max_length=9, null=True, verbose_name='שנה אקדמית')),
                ('semester', models.CharField(choices=[('A', 'סמסטר א'), ('B', 'סמסטר ב')], max_length=1, verbose_name='סמסטר')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
            ],
            options={
                'unique_together': {('student', 'course', 'academic_year', 'semester')},
            },
        ),
    ]
